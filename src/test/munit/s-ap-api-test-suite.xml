<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="s-ap-api-test-suite.xml" />
	<munit:test name="postive_s-ap-api-test-suite-implementingFowTest" doc:id="b7a1a9da-471f-40b4-810c-15e77f15ce0a" description="Test">
		<munit:behavior >
			<set-payload value="#[output application/json --- readUrl('classpath://mockResources/consumerInpurtMock.json')]" doc:name="Set Payload for queue" doc:id="5ef14e05-b2fc-4490-b6ed-d7bd0b0f9c0e" />
			<munit-tools:mock-when doc:name="Mock when write the file in project folder" doc:id="e6a608bc-dc7c-4522-8dae-1bbf712da1cd" processor="ftp:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Write in project folder " attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="postive_implementing_S_AS_interface_Fow" doc:id="ee8c98f5-46c4-4399-a08b-92eacf45ff91" name="implementing_S_AS_interface_Fow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="equal to payload" doc:id="17d39944-5d90-4086-9f2e-8a3981573103" actual="#[payload.message]" expected='#["file created successfully"]' />
		</munit:validation>
	</munit:test>
	<munit:test name="negative_s-ap-api-test-suite-implementingFowTest" doc:id="78ad0de3-db33-486b-a88a-43b625e1fb9d" description="Test" expectedErrorType="FTP:ACCESS_DENIED">
		<munit:behavior >
			<set-payload value="#[output application/json --- readUrl('classpath://mockResources/consumerInpurtMock.json')]" doc:name="Set Payload for queue" doc:id="7e91c16c-29eb-4bda-953a-6eb42ad49241" />
			<munit-tools:mock-when doc:name="Mock when write the file in project folder" doc:id="49f9dc28-5621-4221-b171-92ea841661ea" processor="ftp:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eade6d9c-6417-4b66-a049-114125fb9aca" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="FTP:ACCESS_DENIED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="negative_implementing_S_AS_interface_Fow" doc:id="e54857c1-f1a0-4f2c-a528-16f8c9071d91" name="implementing_S_AS_interface_Fow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals OSM connectivity issue" doc:id="a61e20a2-dae4-46cc-8a43-6184cdb02de7" actual="#[payload.message]" expected='"FTP connectivity issue found"' />
		</munit:validation>
	</munit:test>

</mule>
